---
import Base from "@/layouts/Base.astro";
import { markdownify } from "@/lib/utils/textConverter";
import type { CollectionEntry } from "astro:content";
import { getEntry, render } from "astro:content";
import { loadLocale, createTranslator } from "@/i18n";

const entry = (await getEntry("pages", "404")) as CollectionEntry<"pages">;
const { Content } = await render(entry);

// Pull everything from MD (with safe fallbacks)
const data = entry.data as any;

const title = data.title ?? "Page Not Found";
const metaTitle = data.meta_title ?? `${title} — Altiora`;
const description =
  data.description ?? "We couldn’t find that page — let’s get you moving again.";
const image = data.image ?? "/images/404.svg";

const pathSegments = Astro.url.pathname.split("/").filter(Boolean);
const locale = pathSegments.length && pathSegments[0].length === 2 ? pathSegments[0] : "en";
const localeMap = loadLocale(locale);
const t = createTranslator(localeMap);

// allow optional labelKey on CTAs coming from content
const ctaPrimary: any = data.cta_primary ?? { label: "Return to Home", href: "/" };
const ctaSecondary: any = data.cta_secondary ?? { label: "Join the Waitlist", href: "/signup" };
const links: any[] =
  data.links ?? [
    { label: "Features", href: "/features" },
    { label: "About", href: "/about" },
    { label: "Contact", href: "/contact" },
    { label: "Terms", href: "/terms-and-conditions" },
  ];
---

<Base title={metaTitle} description={description} image={image}>
  <!-- locale initialized in frontmatter -->
  <section class="relative overflow-hidden">
    <!-- Deep navy gradient background -->
    <div class="absolute inset-0 bg-gradient-to-b from-[#FFFFFF] to-[#FFFFFF]"></div>

    <div class="relative container py-20 text-center text-black">
      <!-- Illustration -->
      <img
        src={image}
        alt="404 illustration"
        width="120"
        height="120"
        class="mx-auto mb-6 h-28 w-28"
        loading="lazy"
        decoding="async"
      />

      <!-- Title from MD -->
      <h1 class="mb-3 text-3xl font-semibold md:text-5xl" set:html={markdownify(title)} />

      <!-- MD body, inverted prose -->
      <div class="prose mx-auto max-w-prose">
        <Content />
      </div>

      <!-- CTAs managed from MD -->
      <div class="mt-8 flex flex-wrap justify-center gap-4">
        <a href={ctaPrimary.href} class="btn btn-primary">
          {ctaPrimary.labelKey ? t(ctaPrimary.labelKey) : ctaPrimary.label}
        </a>
        <a
  href={ctaSecondary.href}
  aria-label="Join the Altiora waitlist"
  class="group relative inline-flex items-center justify-center rounded-3xl px-6 py-3
         font-semibold text-white
         bg-gradient-to-r from-[#FFE27A] via-[#FFC300] to-[#FFB000]
         shadow-[0_8px_20px_rgba(255,195,0,0.35)]
         ring-1 ring-[#E5B000] hover:ring-[#FFD54A]
         transition-all duration-300 ease-out
         hover:shadow-[0_12px_28px_rgba(255,195,0,0.50)]
         focus:outline-none focus-visible:ring-2 focus-visible:ring-[#FFC300]
         focus-visible:ring-offset-2 focus-visible:ring-offset-white
         active:translate-y-[1px]"
>
  {ctaSecondary.labelKey ? t(ctaSecondary.labelKey) : ctaSecondary.label}
  <svg
    class="ml-2 h-4 w-4 transition-transform duration-300 group-hover:translate-x-0.5"
    viewBox="0 0 20 20"
    fill="currentColor"
    aria-hidden="true"
  >
    <path fill-rule="evenodd"
      d="M10.293 3.293a1 1 0 0 1 1.414 0l6 6a1 1 0 0 1 0 1.414l-6 6a1 1 0 1 1-1.414-1.414L14.586 11H3a1 1 0 1 1 0-2h11.586l-4.293-4.293a1 1 0 0 1 0-1.414z"
      clip-rule="evenodd" />
  </svg>
</a>

      </div>

      <!-- Popular links -->
      <nav aria-label="Popular links" class="mt-10">
        <ul class="flex flex-wrap justify-center gap-x-6 gap-y-3 text-sm opacity-90">
          {links.map((l) => (
            <li>
              <a
                href={l.href}
                class="underline decoration-[#FFC300] underline-offset-4 hover:opacity-100"
              >
                {l.labelKey ? t(l.labelKey) : l.label}
              </a>
            </li>
          ))}
        </ul>
      </nav>
    </div>
  </section>
</Base>
